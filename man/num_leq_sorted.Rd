% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/C_interfaces.R
\name{num_leq_sorted}
\alias{num_leq_sorted}
\title{Less-Than-Or-Equal Comparison of Sorted Vectors}
\usage{
num_leq_sorted(a, b, tolerance = 0)
}
\arguments{
\item{a}{a sorted vector of numbers.}

\item{b}{a sorted vector of numbers.}

\item{tolerance}{tolerance for numerical noise.}
}
\value{
A vector of same length as \code{a}.
}
\description{
Assume given two sorted numeric vectors \code{a} and \code{b}. For each element \code{a[i]}, determine the number of elements in \code{b} that are less than or equal (leq) to this value.
}
\note{
Equivalently, because the input vectors are sorted, for each element \code{a[i]} determine the maximum index \code{j} with \code{b[j] <= a[i]}.
}
\examples{
# The second vector has
# -) 0 elements leq (less-than-or-equal) -3
# -) 2 elements leq 1
# -) 2 elements leq 3
# -) 3 elements leq 5
# -) 3 elements leq 7
num_leq_sorted(c(-3, 1, 3, 5, 7), c(0, 1, 4, 9, 16))

# Numerical noise < tolerance has no effect
num_leq_sorted(1, 0:2, tolerance=1e-12)
num_leq_sorted(1 - 1e-13, 0:2, tolerance=1e-12)
num_leq_sorted(1 + 1e-13, 0:2, tolerance=1e-12)

# Trivial cases
num_leq_sorted(1:5, 1:5)
num_leq_sorted(c(), 1:5)
num_leq_sorted(1:5, c())
}
\keyword{internal}

